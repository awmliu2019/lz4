% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{lzCompress}
\alias{lzCompress}
\alias{lzDecompress}
\title{lzCompress In-memory Compression and Decompression}
\usage{
lzCompress(from, level = 0L, type)

lzDecompress(from, type)
}
\arguments{
\item{from}{A raw or character vector to be compressed (for \code{lzCompress}), 
or a raw vector  to be decompressed (for \code{lzDecompress}). Character vectors will be
         converted to raw vectors with character strings separated by
         \code{"\n"} in the \code{lzCompress} case.}

\item{level}{An integer between 0 (fast but less compression)}

\item{type}{Not used! This dummy argument is present to facilitate drop-in replacement with
\code{memCompress}. We reserve the parameter name for future use however, but right now
it is ignored.
to 9 (slow but more compression), inclusive.}
}
\value{
A raw vector representing the compressed object.
}
\description{
In-memory compression or decompression for raw vectors, cf.
\code{\link{memCompress}}.
}
\note{
The functions are compatible with the command-line lz4 format
for easy interoparability with other applications. See the examples.
}
\examples{
x <- head(airquality)
y <- lzCompress(serialize(x, NULL))
z <- unserialize(lzDecompress(y))
all.equal(x, z)

\dontrun{
# Compatibility with the lz4 file format, this example assumes that
# the 'lz4' program is in your system PATH.
# Compress some text in R and save to a file:
compressed_file <- tempfile()
writeBin(lzCompress(capture.output(head(state.x77))), compressed_file)

# Now decompress those data with command-line lz, saving to another file:
decompressed_file <- tempfile()
system2("lz4", args=c("-d", compressed_file, decompressed_file))

# Examine the output:
readLines(decompressed_file, warn=FALSE)
}

}
\seealso{
\code{\link{memCompress}}, \code{\link{memDecompress}}
}

